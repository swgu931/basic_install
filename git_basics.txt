# create a new repository on the command line

echo "# ebme-robotmenu" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/new-repo.git
git push -u origin main


# push an existing repository from the command line

git remote add origin https://github.com/new-repo.git
git branch -M main
git push -u origin main


#로컬변경사힝이 있을 경우, 로컬 브랜치 생성하여 커밋하고, main으로 변경후, cherry-pick 으로 머지함.

git checkout -b commit1
git status
git branch
git log

git add .
git commmit
git status
git log
git branch

git checkout main
git pull
git status
git branch
git log
git branch

git cherry-pick commit1
git status
git log
git show
git status
git show --stat
git branch
git commit --amend
git log
git push 
git log
git status
git branch

#로컬 브랜치 필요없을시 삭제 
git branch -D commit1


#git fork 후에 원래 git과 동기화 하는 방법

# git fork from [original-site]
git clone [my-forked-site]
cd [downloaded-folder]
git remote add upstream [original-site]
git pull upstream master


# git push for review 
# git push origin HEAD:refs/for/{branch_name}
git push origin HEAD:refs/for/foxy


# git migration to other new git repo.

mkdir backup
cd backup

git clone --mirror https://github.com/oldone
cd oldone
git remote set-url --push origin https://github.com/newone
git push --mirror
git remote -v
git clone https://github.com/lge-cloud-ai-robot/newone
cd newone
git remote -v

# git workflow good site
https://github.com/confluentinc/ksql/blob/master/CONTRIBUTING.md




# 소스 변경시 반영

git clone https://github.com/ssssssss
# 소스 수정
git checkout -b change-value
git status
git add guestbook/
git commit -m "change-value"
git push origin change-value


# 예전 소스로 revert 방법

git checkout master
git pull origin  # 최신 master branch 를 가져옴
git log
#commit 한 소스를 revert 하고, 예전 버전으로 되돌리기 위해,
# git log 에서 revert할 해쉬값 선택/복사
git revert 4ddf59sdljfl340slkdjflkjksldjf3939ksdjlfks

#---
#원복하는 이유 명시 저장
#---
git log
#---
#소스 수정 확인
#---
git push origin master

#======================================================

# 원격 소스로 로컬을 overwrite 하는 경우
git reset --hard
git clean -xdf

#======================================================


# Large file 제외하고 push, Large file 은 git lfs 이용

find . -type f -size -20M -not -path "./.git/*" -exec git add {} +

find . -type f -size +20M -not -path "./.git/*"

find . -type f -size +20M -not -path "./.git/*" -exec git lfs track "{}" \;

git add ./.gitattributes
git add /path/to/file




